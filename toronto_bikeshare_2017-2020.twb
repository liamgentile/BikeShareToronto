<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='bikeshare_data' inline='true' name='federated.0petl4d036sw9a1cn5jku1saz3vj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bikeshare_data' name='textscan.03hzmlt17e9ph3101nwxl1s3a0h5'>
            <connection class='textscan' directory='/Users/liamgentile/Desktop/to_bikeshare_project' filename='bikeshare_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03hzmlt17e9ph3101nwxl1s3a0h5' name='bikeshare_data.csv' table='[bikeshare_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='trip_duration_seconds' ordinal='1' />
            <column datatype='string' name='from_station_name' ordinal='2' />
            <column datatype='string' name='to_station_name' ordinal='3' />
            <column datatype='string' name='user_type' ordinal='4' />
            <column datatype='date' name='start_date' ordinal='5' />
            <column datatype='datetime' name='start_time' ordinal='6' />
            <column datatype='date' name='stop_date' ordinal='7' />
            <column datatype='datetime' name='stop_time' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.03hzmlt17e9ph3101nwxl1s3a0h5' name='bikeshare_data.csv' table='[bikeshare_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='trip_duration_seconds' ordinal='1' />
            <column datatype='string' name='from_station_name' ordinal='2' />
            <column datatype='string' name='to_station_name' ordinal='3' />
            <column datatype='string' name='user_type' ordinal='4' />
            <column datatype='date' name='start_date' ordinal='5' />
            <column datatype='datetime' name='start_time' ordinal='6' />
            <column datatype='date' name='stop_date' ordinal='7' />
            <column datatype='datetime' name='stop_time' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_duration_seconds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_duration_seconds]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>trip_duration_seconds</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>from_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[from_station_name]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>from_station_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>to_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[to_station_name]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>to_station_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>user_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[user_type]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>user_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[start_time]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>start_time</remote-alias>
            <ordinal>6</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[stop_date]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>stop_date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stop_time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[stop_time]</local-name>
            <parent-name>[bikeshare_data.csv]</parent-name>
            <remote-alias>stop_time</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='trip_duration_minutes' datatype='real' name='[Calculation_1400056582770569216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[trip_duration_seconds] / 60' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='bikeshare_data.csv' datatype='table' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
      <column caption='From Station Name' datatype='string' name='[from_station_name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
      <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
      <column caption='Stop Date' datatype='date' name='[stop_date]' role='dimension' type='ordinal' />
      <column aggregation='Hour' caption='Stop Time' datatype='datetime' name='[stop_time]' role='dimension' type='ordinal' />
      <column caption='To Station Name' datatype='string' name='[to_station_name]' role='dimension' type='nominal' />
      <column caption='Trip Duration Seconds' datatype='integer' name='[trip_duration_seconds]' role='measure' type='quantitative' />
      <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
      <column-instance column='[user_type]' derivation='Attribute' name='[attr:user_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[to_station_name]' derivation='None' name='[none:to_station_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:to_station_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;80 Clinton St (North of College) - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alma Ave / Gladstone Ave SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bathurst St / Queens Quay W&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Berry Rd / Bell Manor Dr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bloor St W / Manning Ave - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carlaw Ave / Dundas St E&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Church St  / Wood St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Concord Ave / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Danforth Ave / Westlake Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dundas St E / Boulton Ave - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eastwood Rd / Coxwell Ave - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fennings St / Queen St W - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Front St E / Scott St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gerrard St E / Ted Reeve Dr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;High Park Ave / Dundas St W&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Humberside Grounds - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King St E / Church St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;King St W / Bay St (West Side)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Langford Ave / Danforth Ave - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower Simcoe St / Bremner Blvd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Merton St / Mount Pleasant Rd&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oak St / Parliament St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parliament St / Aberdeen Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queen St E / Larchmount Ave&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queen St. E / Spruce Hill Rd.&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Roehampton Ave / Yonge St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem Ave / Bloor St W&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Simcoe St / Wellington St W&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St George St / Bloor St W&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Swansea Community Centre&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Torresdale Ave / Antibes Dr&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vanauley St / Queen St W - SMART&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wellington St W / Portland St&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Woodbine Subway Green P SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1 Market St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;439 Sherbourne St - SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Balliol St / Yonge St  SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bathurst St/Queens Quay(Billy Bishop Airport)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloor St W / Balmuto St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brick Works&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chester Station (Green P)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;College St / McCaul St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danforth Ave / Aldridge Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donlands Station&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Liberty St / Pirandello St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Essex St / Christie St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frederick St / The Esplanade&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gamble Ave / Broadview Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guildwood GO Station (South)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HTO Park (Queen&apos;s Quay W)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joseph J Piccininni Community Centre&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King St W / Fraser Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakeshore Blvd E / Knox Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Livingston Rd / Guildwood Pkwy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marie Curtis Park&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Navy Wharf Ct. / Bremner Blvd.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ossington Ave / College St W&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Princess St / Adelaide St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Queen St W / Ossington Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Richmond St E / Yonge St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Royal York Rd / Mimico Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sheridan Ave / Dundas St W - SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St Clair Ave W / Bathurst St.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sumach St  / Queen St E&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;The Queensway at South Kingsway - SMART&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University Ave / Gerrard St W&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ward Ave / Wallace Ave&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Willcocks St / St. George St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yonge St / Harbour St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;25 York St – Union Station South&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adelaide St W / Bay St - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bathurst St / Adelaide St W&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belmont St / Davenport Rd - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloor St W / Gladstone Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Broadview Ave / Danforth Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Church St / Alexander St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;College St W / Major St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danforth Ave / Ellerbeck St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dufferin St / Bloor St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dundas St E / Regent Park Blvd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Euclid Ave / Herrick St - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Front St / Simcoe St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gerrard St E / Broadview - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hayter St / Laplante Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Humber Bay Shores Park / Marine Parade Dr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kendal Ave / Bernard Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;King St W / Spadina Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lakeshore Blvd W / Ontario Dr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lonsdale Rd / Spadina Rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Martin Goodman Trail / Ontario Dr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niagara St / Tecumseth St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palmerston Ave / Vermont Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen St E / Berkeley St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Queen St W / Spadina Ave&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Riverdale Park South (Broadview Ave)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rushton Rd / St Clair Ave W - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Simcoe St / Michael Sweet Ave - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Clair W Subway - Heath Entrance&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunnybrook Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Toronto Bike Shop&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;University Ave / King St W - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wellesley St E / Yonge St (Green P)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wolsley St / Palmerston Ave - SMART&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;York St / Harbour St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;135 Queen’s Wharf - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Amos Waites Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bay St / Bloor St W&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beverly St / College St W&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blythwood Rd / Yonge St - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central Tech  (Harbord St)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;College Park - Yonge St Entrance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coxwell Ave /  Lake Shore Blvd E&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davenport Rd / Christie St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dundas St E / Pembroke St - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eglinton Ave W / Henning Ave SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fleming Cres / Bayview Ave - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Front St W / University Ave (1)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Glendonwynne Ave / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Highfield Rd / Gerrard St E&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jane St / Bloor St W (Jane Subway Station)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;King St E / Victoria St&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lake Shore Blvd W / Ellis Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lascelles Blvd / Eglinton Ave W - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lundy Ave / Etienne Brule Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mill St / Tannery Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ontario Place Blvd / Remembrance Dr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pears Av / Avenue Rd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Princess St / Adelaide St E&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Queen&apos;s Park Cres W / Hoskin Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rosedale Station&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sentinel Rd / Finch Hydro Corridor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spadina Ave / Adelaide St W&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St. George St / Russell St - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tecumseth St / Queen St W - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyndall Ave / King St W - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Victoria Park Ave / Danforth Ave - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Western Battery Rd / Pirandello St - SMART&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yarmouth Rd / Christie St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;111 Bond St (North of Dundas St E)  - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alton Ave / Dundas St E (Greenwood Park)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bay St / St. Joseph St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Beverley St / College St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bloor St W / Pacific Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carlaw Ave / Strathcona Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Claremont St / Dundas St W&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cosburn Ave / Cedarvale Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davenport Rd / Avenue Rd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dundas St E / Broadview Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastwood Rd / Woodbine Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Finch West Subway Station&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Front St W / Bay St (North Side)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gerrard St E / Victoria Park Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;High Park Outdoor Pool&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huron/ Harbord St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;King St E / Jarvis St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lake Shore Blvd E / Knox Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lansdowne Ave / Whytock Ave&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lower Spadina Ave / Lake Shore Blvd&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metro Hall Plaza&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nelson St / Duncan St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parliament St / Bloor St E&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queen St E / Nursewood Rd (Neville Park Loop)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queen St. E / Woodward Av&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Roehampton St / Bayview Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scott St / The Esplanade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soho St / Queen St W&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Joseph St / Bay St - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Symington Ave / Davenport Rd - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trent Ave / Danforth Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vaughan Rd / Oakwood Ave - SMART&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wellington St W / Stafford St&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Woodbine Subway Station - SMART&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;25 York St (ACC/Union Station South)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adelaide St W / Brant St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bathurst St / Dundas St W&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beltline Trail / Chaplin Cres.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bloor St W / High Park Ave (High Park)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Broadview Ave / Westwood Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Church St / Bloor St E&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;College St W / Markham St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Danforth Ave / Gough Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dufferin St / Finch Hydro Recreational Trail&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dundas St W / Yonge St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Exhibition GO (Atlantic Ave)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Front St / Yonge St (Hockey Hall of Fame)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gerrard St E / Leslie St - SMART&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;High Park - Grenadier Cafe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Humber Bay Shores Park East&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kendal Ave / Spadina Rd&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;King St W / Stafford St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lakeshore Blvd W / The Boulevard Club&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower Jarvis / Queens Quay E&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mary McCormick Rec Centre (Sheridan Ave)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Noble St / Queen St W&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pape Ave / Gamble Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queen St E / Berkely St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Queen St W / York St (City Hall)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Riverview Gardens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Russell Hill Rd / St Clair Ave W&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spadina Ave / Sussex Ave&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Clarens Ave / College St&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyside - Gus Ryder Pool&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toronto Eaton Centre (Yonge St)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;University Ave / Queen St W&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wellesley St E / Yonge St Green P&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodbine Ave / Lake Shore Blvd E&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;York St / King St W - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;424 Wellington St W - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baldwin Ave / Spadina Ave - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bay St / Davenport Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloor St / Brunswick Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bremner Blvd / Spadina Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cherry St / Mill St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;College St / Major St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;D&apos;Arcy St. /McCaul St. SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dentonia Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dundas St W / St. Patrick St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Emerson Ave / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Foster Pl / Elizabeth St - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gailbraith Rd / King\x19; s College Cr. (U of T)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greenwood Subway Station&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howard St / Rose Ave - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jimmie Simpson Park (Queen St E)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;King St W / Crawford St - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lake Shore Blvd W / Twenty Fourth St - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Norway Park&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Margueretta St / College St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mortimer Ave / Coxwell Ave&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ossington Ave / Bloor St W&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Primrose Ave / Davenport Rd - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queen St W / James St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Regal Rd / Dufferin St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roxton Rd / Harbord St&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sherbourne St / Wellesley St E&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spadina Rd / Austin Terrace - SMART&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strachan Ave / Princes&apos; Blvd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Pond Rd / Sentinel Rd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;University Ave / College St (West)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Walnut Ave / Queen St W&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Widmer St / Adelaide St W&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yonge St / Dundonald St - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;12 Harbour St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;457 King St. W. at Spadina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bartlett Parkette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bay St / Albert St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloor St W / Brock Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bridgeman Ave / Bathurst St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chiltern Hill Rd / Eglinton Ave W - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;College St W / Borden St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danforth Ave / Barrington Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dovercourt Rd / Harrison St - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dundonald St / Church St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Essex St / Christie St - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fringe Next Stage - 7219&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Garden Ave / Roncesvalles Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hanna Ave / Liberty St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Humber College - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Judson St / Royal York&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;King St W / Joe Shuster Way&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lakeshore Blvd E / Parliament St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan Av / Gerrard St E&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marilyn Bell Park Tennis Court&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Neil McLellan Park - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ossington Ave / Harrison St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queen St E / Woodward Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Queens Park / Bloor St W&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond St W / York St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Runnymede Rd / Annette St - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Simcoe St / Adelaide St W&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St Clair Ave W / Castleton Ave - SMART&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Summerhill Ave / Maclennan Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;The Royal Ontario Museum (Bloor St Entrance)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University Ave / Gerrard St W (East Side)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Warehouse EBS-Station&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Windsor St / Newcastle St&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yonge St / St Clair Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;324 Cherry St - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Augusta Ave / Denison Sq&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bayview Ave / Lawren Harris Square&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bloor GO / UP Station (West Toronto Railpath)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Braemar Ave / Eglinton Ave W -SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cherry Beach Sports Field (55 Unwin Ave)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;College St / Crawford St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cumberland Ave / Bay St SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Davisville Ave / Pailton Cres - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dundas St W / Edna Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Elm St/ University Ave (East)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort York  Blvd / Capreol Ct&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fulton Ave / Pape Ave - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gould St / Yonge St (Ryerson University)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Housey St / Dan Leckie Way - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jarvis St / Maitland Pl&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;King St W / Charlotte St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Shore Blvd W / The Boulevard Club&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lisgar Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Make Invisible - 7218&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Morse St / Eastern Ave - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Orde St / McCaul St - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pretoria Av / Broadview Av&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queen St W  /  Fuller Ave - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queens Quay W / Dan Leckie Way&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Roxborough St W / Yonge St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sherbourne St / Isabella St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Simcoe St / Queen St W&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sterling Rd / Dundas St W&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Temperance St. Station&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Ave / College St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallace Ave / Pauline Ave - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Weston Rd / St Clair Ave W - SMART&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yonge St / Davisville Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;51 Parliament St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adelaide St W / Strachan Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bathurst St / Fort York Blvd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkeley St / Adelaide St E - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bloor St W / Huron St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cariboo St / Rail Path&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Church St / Dundas St E - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colonel Danforth Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danforth Ave / Lamb Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dufferin St / Sylvan Av (Dufferin Grove Park)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Lynn Ave / Danforth Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Exhibition GO Station&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St E / Bayview Avenue&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Front St W / Blue Jays Way&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;High Park - West Rd&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Humber Bay Shores Park West&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kew Beach Ave / Kenilworth Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;King St W / Tecumseth St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lakeshore Blvd W / Windermere Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lower Jarvis St / The Esplanade&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;McGill St / Church St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Dancer Blvd / Lake Shore Blvd E&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pape Subway Green P&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queen St E / George St (Moss Park)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Queen St. E / Eastern Ave&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Robert St / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russell St / Huron St - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Simcoe St / Wellington St North&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Clarens Ave / Shirley Ave - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunnyside Ave / The Queensway - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toronto Inukshuk Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;University Ave / Richmond St W&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wellington St W / Bathurst St&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woodbine Ave / O&apos;Connor Dr - SMART&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;York St / Lake Shore Blvd W&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;161 Bleecker St (South of Wellesley)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Annette St / Dundas W&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bay St / Bloor St W (East Side)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beverly  St / Dundas St W&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bond St / Queen St E&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charles St E / Jarvis St - SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;College Park South&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Coxwell Ave / Plains Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Davenport Rd / Lansdowne Ave.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;E.T. Seton Park (Eglinton Ave E / Leslie St)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eglinton Ave W / Scarlett Rd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florence Gell Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Front St W / University Ave (2)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Glenwood Ave / Runnymede Rd - SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hillsdale Ave W / Yonge St - SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jarvis St / Carlton St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;King St W / Bay St (East Side)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lake Shore Blvd W / Louisa St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lawton Blvd / Yonge St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lynn Williams St / East Liberty St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moore Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ontario St / Adelaide St E -SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queen St E / Sackville St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queen St W / Close Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Queen St W / Portland St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rosehill Ave / Avoca Ave - SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shaw St / Dupont St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spadina Ave / Blue Jays Way&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. James Park (King St. E.)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ted Rogers Way / Bloor St E&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ulster St / Bathurst St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Victoria Park Subway Station - SMART&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Westmoreland Ave / Fernbank Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yonge St / Alexander St - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;190 Queens Quay E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Annette St / Jane St - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bay St / Bloor St W (West Side)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Blake St / Boultbee Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Borden St / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charles St W / Balmuto St - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;College Park- Gerrard Entrance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coxwell Ave/  Lakeshore Blvd E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Davenport Rd / McAlpine St - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dundas St E / Victoria St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Elizabeth St / Edward St (Bus Terminal)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort York Blvd / Bathurst St SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Front St W / Yonge St (Hockey Hall of Fame)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Goodwood Park Ct / Dentonia Park - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hocken Ave./Vaughan Rd.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jarvis St / Dundas St E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kingston Rd / Beech Ave - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lake Shore Blvd W / Ontario Dr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lee Ave / Queen St E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macpherson Ave / Spadina Rd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morningside Park (Highland Creek Trail)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ontario St / King St E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Polson Pier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queen St W / Cowan Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Queens Quay / Yonge St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ross St / Cecil St - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaw St / Essex St&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spadina Ave / Fort York Blvd&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Starspray Ave / Lawrence Ave E&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Teddington Park Ave - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;University Ave / College St (East)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Victoria St / Gould St (Ryerson University)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Westmount Ave / St Clair Ave W - SMART&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yonge St / Aylmer Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;424 Wellington St W&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Augusta Ave / Dundas St W&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bay St / College St (West Side) - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bloor GO / UP Station/ Rail Path&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bremner Blvd / Rees St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cherry St / Distillery Ln&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;College St / Huron St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;D&apos;Arcy St / Spadina Ave - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dawes Rd / Taylor Creek Trl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dundas St W / Roncesvalles Green P - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Elwood Blvd / Avenue Rd - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort York Blvd / Garrison Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;G Ross Lord Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Granby St / Church St - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Howard Park Ave / Dundas St W - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jarvis St / Richmond St E&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;King St W / Charlotte St (West)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Shore Blvd W / Thirty Ninth Street&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lisgar St / Dundas St SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mallon Ave / Jones Ave -SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mortimer Ave / Carlaw Ave SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oriole Pkwy / Kilbarry Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Primrose Ave / Davenport Rd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queen St W / Gladstone Ave&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rouge Hill GO Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roxton Rd / College St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sherbourne St / Wellesley St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spadina Ave / Willcocks St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stewart St / Bathurst St  - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;The Esplanade / Hahn Pl - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Union Station&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallace Ave / Symington Ave - SMART&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Widmer St / Adelaide St&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yonge St / Dundas Sq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;424 Wellington St. W&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Baldwin St / Henry St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bellwoods Ave / Treford Pl - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bloor St E / Huntley St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Briar Hill Ave / Yonge St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chester Station&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;College St / Markham St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dalton Rd / Bloor St W&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dockside Dr / Queens Quay E (Sugar Beach)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dundas St W / Watkinson Ave - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erskine Ave / Yonge St SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frederick St / King St E&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gailbraith Rd / King’s College Cr. (U of T)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guildwood GO Station (North)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Howard St / Sherbourne St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;John St  / Mercer St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;King St W / Douro St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lake Shore Blvd W / Windermere Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Livingston Rd (Highland Creek Trail)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margueretta St / College St W&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nassau St / Bellevue Ave&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ossington Ave / College St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Princes Gate / Nunavut Dr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Queen St W / John St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Richmond St E / Jarvis St Green P&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Royal York Rd / Lake Shore Blvd W&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sherbourne St N / Elm Ave - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spadina Rd / St.Clair Ave West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sumach St / Carlton St. (Riverdale Farm)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Queensway / High St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;University Ave / Elm St&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Walton St / Elizabeth St - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilket Creek Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yonge St / Golfdale Rd - SMART&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;York St / Queens Quay W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;123 Queen St W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alvin Ave / St Clair Ave E - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bathurst Subway Station&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Beverley  St / Dundas St W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bloor St W / Riverside Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Carlton St / Parliament St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clarence Square&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cosburn Ave / Donlands Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Davenport Rd / Bathurst St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dundas St E / George St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Edward St / Yonge St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fleet St / Bathurst St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Front St W / Bay St (South Side)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Glebe Rd W / Yonge St - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;High Park Subway - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isabella St / Church St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;King St E / Ontario St.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lake Shore Blvd E / Leslie St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lansdowne Subway Green P&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lower Spadina Ave / Lakeshore Blvd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Sweet Ave / St. Patrick St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niagara St / Richmond St W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parliament St / Gerrard St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queen St E / Pape Ave - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queen&apos;s Park / Bloor St W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roncesvalles Ave / Marmaduke St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Seaton St / Dundas St E&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sorauren/Geoffrey (Sorauren Park) - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. George St / Bloor St W&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Symington Ave / Dupont St - SMART&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinity St /Front St E&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vaughan Rd /Wychwood Ave&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wellington St W / York St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wright / Sorauren (Sorauren Park) - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;80 Clinton St (North of College)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alameda Ave / Vaughan Rd - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bathurst St / Lennox St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berkeley St / Dundas St E - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bloor St W / Indian Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carlaw Ave / Danforth Ave - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Church St / Lombard St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Concord Av / Dewson St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Danforth Ave / Sibley Ave - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dundas St / Yonge St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eastern Ave / Winnifred Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairmount Park - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Front St E / Cherry St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gerrard St E / River St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;High Park Amphitheatre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HTO Park (Queens Quay W)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;King / Cowan Ave - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;King St W / York St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Landsdowne Subway Green P&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lower Sherbourne St / The Esplanade&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Merton St / Al Green Ln - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;O&apos;Connor Dr / Curity Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parkside Dr / Bloor St W - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queen St E / Hammersmith Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queen St. E / Rhodes Ave.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roehampton Ave / Mount Pleasant Rd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sackville St / Eastern Ave - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Simcoe St / Wellington St South&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Columba Pl / St Clair Ave E - SMART&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Superior Ave / Lake Shore Blvd W&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Torrens Ave / Broadview Ave&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;University of Toronto Scarborough&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wellington St W / Bay St&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Woodbine Subway Green P (Cedarvale Ave)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;20 Charles St E&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;519 Church St - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Barton St / Howland St - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bay St / College St (East Side)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bloor St W / Christie St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bridgeman Ave / Kendal Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chorley Park - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;College St W / Crawford St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Danforth Ave / Coxwell Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dovercourt Rd / Harrison St (Green P) - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dupont St / Emerson Ave SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Esther Shiner Stadium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frobisher Ave / Lascelles Blvd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George St / King St E&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Harbord St / Clinton St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hubbard Blvd / Balsam Av&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keele St / Annette St - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;King St W / Jordan St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lakeshore Blvd E /Leslie St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Logan Ave / Bain Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough Ave / Yonge St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oak St / Sumach St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pacific Ave / Glenlake Ave - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Priscilla  Ave / Dundas St W - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Queen St W / Roncesvalles Ave&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ripley Ave / Ormskirk Ave - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rusholme Park Cres / College St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Simcoe St / Dundas St W&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Clair Ave W / Gunns Rd - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Summerhill Ave / MacLennan Ave - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thompson St / Broadview Ave - SMART&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;University Ave / Gerrard St W (West Side)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waterfront Trail (Rouge Hill)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Winona Dr / Davenport Rd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yonge St / Wood St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;200 Bloor St. E.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antler St / Campbell Ave - SMART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bay St / Charles St - SMART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bleecker St / St James Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boston Ave / Queen St E&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherry Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;College St / Borden St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crawford St / Queen St W&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Davenport Rd / Oakwood Rd - SMART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dundas St W / Crawford St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ellis Ave / The Queensway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort York  Blvd / Capreol Crt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fulton Ave / Pape Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gould St / Mutual St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holland Park Ave / Oakwood Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jarvis St / Isabella St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;King St W / Brant St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Shore Blvd W / Ontario Dr(Ontario Place)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberty St / Fraser Ave Green P&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madison Ave / Bloor St W&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morse St / Eastern Ave&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orchard Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pottery Rd / Lower Don River Trail&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queen St W / Dovercourt Rd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queens Quay E / Lower Sherbourne St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Queens Quay W / Lower Simcoe St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sherbourne St / Carlton St (Allan Gardens)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spadina Ave / Harbord St - SMART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephenson Ave / Main St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temperance St / Yonge St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;University Ave / Armoury St - SMART&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Victoria St / Queen St E&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Weston Lions Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yonge St / Bloor St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;128 Sterling Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amelia St. / Sumach St.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bay St / Wellesley St W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Beverly St / College St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bloor St W / Shaw Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Castle Frank Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Clendenan Ave / Rowland St - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cosburn Ave / Durant Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Davenport Rd / Bedford Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dundas St E / Parliament St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eglinton Ave E / Redpath Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fleet St / Garrison Rd (Fort York)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gerrard St E / Malvern Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Glen Edyth Dr / Davenport Rd&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;High Park Subway Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jameson Ave / Queen St W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;King St E / River St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lake Shore Blvd W / Colborne Lodge Dr&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lansdowne Subway Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lumsden Ave / Eastdale Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mill St / Parliament St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ontario Place Blvd / Lakeshore Blvd W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PBSC-OPS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phoebe St / Spadina Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Queen&apos;s Park Cres E / Grosvenor St - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rosedale Park (20 Schofield Ave)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seaton St / Dundas St E - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Southwood Dr / Kingston Rd - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St. George St / Hoskin Ave&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taddle Creek Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Twelfth St / Thirteenth St&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Via Italia / Mackay Ave - SMART&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wells Hill Ave / St Clair Ave W&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wychwood Ave / Benson Ave - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;25 York St \x13;  Union Station South&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;541 Huron St - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Base Station&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bay St / Queens Quay W (Ferry Terminal)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloor St W / Dundas St W&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bridgeman Ave / Kendal Ave - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Christie St / Benson Ave (Wychwood Barns)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;College St W / Huron St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Danforth Ave / Dewhurst Blvd&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dufferin Gate - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Durie St / Dundas St W - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Euclid Ave / Bloor St W&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Front St / Bay St (North Side)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gerrard Square Mall (1010 Gerrard St E)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Havelock St / Dufferin Park&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hubbard Blvd. / Glen Manor Dr.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keele St / Vine Ave - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;King St W / Portland St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lakeshore Blvd W / Ellis Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Long Branch GO Station&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Martin Goodman Trail (Marilyn Bell Park)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ontario Place Blvd / Lake Shore Blvd W (East)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palmerston Ave / Dundas St W - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Queen St E / Alton Av&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Queen St W / Shaw St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Riverdale Park North (Broadview Ave)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rusholme Park Cres / College St W&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Simcoe St / Michael Sweet Ave&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St Clair Ave W / Winona Ave - SMART&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Summerhill Station&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tommy Thompson Park (Leslie Street Spit)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;University Ave / King St W&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wellesley St / Queen&apos;s Park Cres&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wolfpack - 7219&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yonge St / Yorkville Ave&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:user_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Casual&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Member&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:user_type:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Casual&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Member&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bikeshare_data.csv' id='bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF'>
            <properties context=''>
              <relation connection='textscan.03hzmlt17e9ph3101nwxl1s3a0h5' name='bikeshare_data.csv' table='[bikeshare_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='trip_duration_seconds' ordinal='1' />
                  <column datatype='string' name='from_station_name' ordinal='2' />
                  <column datatype='string' name='to_station_name' ordinal='3' />
                  <column datatype='string' name='user_type' ordinal='4' />
                  <column datatype='date' name='start_date' ordinal='5' />
                  <column datatype='datetime' name='start_time' ordinal='6' />
                  <column datatype='date' name='stop_date' ordinal='7' />
                  <column datatype='datetime' name='stop_time' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.0petl4d036sw9a1cn5jku1saz3vj'>
      <datasources>
        <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
      </datasources>
      <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
        <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
        <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2020-01-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Average Trip Duration by Hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Trip Duration by Hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <column caption='trip_duration_minutes' datatype='real' name='[Calculation_1400056582770569216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trip_duration_seconds] / 60' />
            </column>
            <column-instance column='[Calculation_1400056582770569216]' derivation='Avg' name='[avg:Calculation_1400056582770569216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_time]' derivation='Hour' name='[hr:start_time:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column caption='Trip Duration Seconds' datatype='integer' name='[trip_duration_seconds]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[hr:start_time:qk]' field-type='quantitative' max='23' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[hr:start_time:qk]' value='45' />
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[avg:Calculation_1400056582770569216:qk]' scope='rows' value='Average Trip Duration in Minutes' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0petl4d036sw9a1cn5jku1saz3vj].[avg:Calculation_1400056582770569216:qk]</rows>
        <cols>[federated.0petl4d036sw9a1cn5jku1saz3vj].[hr:start_time:qk]</cols>
      </table>
      <simple-id uuid='{127C84E1-4D08-49DF-9EB8-24ABBF7FD1CF}' />
    </worksheet>
    <worksheet name='Average Trip Duration by User Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Trip Duration in Minutes </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <column caption='trip_duration_minutes' datatype='real' name='[Calculation_1400056582770569216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[trip_duration_seconds] / 60' />
            </column>
            <column-instance column='[Calculation_1400056582770569216]' derivation='Avg' name='[avg:Calculation_1400056582770569216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column caption='Trip Duration Seconds' datatype='integer' name='[trip_duration_seconds]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[avg:Calculation_1400056582770569216:qk]' scope='rows' value='Average Trip Duration in Minutes' />
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]' value='Year'>
              <formatted-text>
                <run fontsize='10'>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0petl4d036sw9a1cn5jku1saz3vj].[avg:Calculation_1400056582770569216:qk]</rows>
        <cols>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</cols>
      </table>
      <simple-id uuid='{EFBFEDBC-CC25-446C-92C1-C12EAD6BE94D}' />
    </worksheet>
    <worksheet name='Busiest Starting Stations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Busiest Starting Stations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <_.fcp.ObjectModelTableType.true...column caption='bikeshare_data.csv' datatype='table' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[to_station_name]' derivation='None' name='[none:to_station_name:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column caption='To Station Name' datatype='string' name='[to_station_name]' role='dimension' type='nominal' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='bikeshare_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:to_station_name:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:to_station_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:to_station_name:nk]</column>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' value='Number of Trips'>
              <formatted-text>
                <run>Number of Trips</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' />
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' />
              <text column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:to_station_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D8093241-768D-469C-A65F-CF4A90E1BD20}' />
    </worksheet>
    <worksheet name='Trip Count by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trips by Month </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <_.fcp.ObjectModelTableType.true...column caption='bikeshare_data.csv' datatype='table' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month-Trunc' name='[tmn:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='bikeshare_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' scope='rows' value='Number of Trips' />
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tmn:start_date:qk]' scope='cols' value='Month ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</rows>
        <cols>([federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk] * [federated.0petl4d036sw9a1cn5jku1saz3vj].[tmn:start_date:qk])</cols>
      </table>
      <simple-id uuid='{8BC0FACB-6482-4910-86A5-F4CC05BDAE3A}' />
    </worksheet>
    <worksheet name='Trip Counts by Hour and User Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trips by Hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <_.fcp.ObjectModelTableType.true...column caption='bikeshare_data.csv' datatype='table' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_time]' derivation='Hour' name='[hr:start_time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column caption='Start Time' datatype='datetime' name='[start_time]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='bikeshare_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' scope='rows' value='Number of Trips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</rows>
        <cols>([federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk] / [federated.0petl4d036sw9a1cn5jku1saz3vj].[hr:start_time:ok])</cols>
      </table>
      <simple-id uuid='{08F8600A-2E77-4292-8AC1-44E72875640D}' />
    </worksheet>
    <worksheet name='Trips by User Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trips by User Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
          </datasources>
          <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
            <_.fcp.ObjectModelTableType.true...column caption='bikeshare_data.csv' datatype='table' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' pivot='key' type='quantitative' />
            <column-instance column='[user_type]' derivation='None' name='[none:user_type:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column caption='User Type' datatype='string' name='[user_type]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='bikeshare_data.csv' datatype='integer' name='[__tableau_internal_object_id__].[bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' scope='rows' value='Number of Trips' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</rows>
        <cols>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]</cols>
      </table>
      <simple-id uuid='{D5625CE8-B1AB-40C8-97D0-169F448E7BED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Bike Share Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Bike Share Toronto 2017-2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='bikeshare_data' name='federated.0petl4d036sw9a1cn5jku1saz3vj' />
      </datasources>
      <datasource-dependencies datasource='federated.0petl4d036sw9a1cn5jku1saz3vj'>
        <column caption='Start Date' datatype='date' name='[start_date]' role='dimension' type='ordinal' />
        <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='29' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='26' param='vert' w='89500' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5125' id='27' w='89500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92875' id='22' param='horz' w='89500' x='800' y='6125'>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92875' id='12' param='horz' w='89500' x='800' y='6125'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='92875' id='7' param='horz' w='89500' x='800' y='6125'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92875' id='5' w='89500' x='800' y='6125'>
                      <zone h='46437' id='10' name='Busiest Starting Stations' w='47900' x='23100' y='6125'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46438' id='15' name='Trip Counts by Hour and User Type' w='35000' x='800' y='52562'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46437' id='18' name='Average Trip Duration by User Type' w='19300' x='71000' y='6125'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46438' id='19' name='Trip Count by Month' w='54500' x='35800' y='52562'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='46437' id='35' name='Trips by User Type' w='22300' x='800' y='6125'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='89' h='98000' id='28' is-fixed='true' param='vert' w='8900' x='90300' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='392' h='50000' id='30' is-fixed='true' name='Average Trip Duration by User Type' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]' show-morefewerbutton='true' show-null-ctrls='false' show-reldate-picker='false' values='relevant' w='8900' x='90300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true'>Bike Share Toronto 2017-2020</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='39' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='38' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5125' id='27' w='89500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='35' is-fixed='true' name='Trips by User Type' w='22300' x='800' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='10' is-fixed='true' name='Busiest Starting Stations' w='47900' x='23100' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' fixed-size='392' h='50000' id='30' name='Average Trip Duration by User Type' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:qk]' show-morefewerbutton='true' show-null-ctrls='false' show-reldate-picker='false' values='relevant' w='8900' x='90300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46437' id='18' is-fixed='true' name='Average Trip Duration by User Type' w='19300' x='71000' y='6125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46438' id='15' is-fixed='true' name='Trip Counts by Hour and User Type' w='35000' x='800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46438' id='19' is-fixed='true' name='Trip Count by Month' w='54500' x='35800' y='52562'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9CBA7856-3503-4A0D-ACA5-A9943462E058}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Trips by User Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07EDC97D-09C1-409D-B5A6-8B6CE2BC09A1}' />
    </window>
    <window class='worksheet' name='Average Trip Duration by User Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB70FEB3-E62F-4814-B707-483B2F3D79AE}' />
    </window>
    <window class='worksheet' name='Trip Counts by Hour and User Type'>
      <cards>
        <edge name='left'>
          <strip size='169'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98351913-7D3E-4D2E-A604-B9C3F13FFF22}' />
    </window>
    <window class='worksheet' name='Busiest Starting Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:to_station_name:nk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[tyr:start_date:ok]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F5AFB42-829A-4C1D-9022-01B8F3A69CC1}' />
    </window>
    <window class='worksheet' name='Trip Count by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[mn:start_date:ok]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[mn:start_date:qk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C259D30-1267-4EE2-AB5C-8962F71C554F}' />
    </window>
    <window class='worksheet' name='Average Trip Duration by Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[hr:start_time:ok]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]</field>
            <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{18FB02AA-7446-43D7-949E-54D084CADC9E}' />
    </window>
    <window class='dashboard' maximized='true' name='Bike Share Dashboard'>
      <viewpoints>
        <viewpoint name='Average Trip Duration by User Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Busiest Starting Stations'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[__tableau_internal_object_id__].[cnt:bikeshare_data.csv_E733FE62C18E4D1685C8EFC51D782FCF:qk]</field>
                    <field>[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:to_station_name:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>57057</value>
                  <value>&quot;Dundas St E / Regent Park Blvd&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Trip Count by Month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trip Counts by Hour and User Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trips by User Type'>
          <zoom type='entire-view' />
          <highlight field='[federated.0petl4d036sw9a1cn5jku1saz3vj].[none:user_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{89DCD95C-6EFE-47EA-966F-DDDB4BDF81F0}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average Trip Duration by Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average Trip Duration by User Type' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bike Share Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Busiest Starting Stations' width='192'>
      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
      /g+SBMSyv29m4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trip Count by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trip Counts by Hour and User Type' width='192'>
      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
      UmMASGr/D1hYgZa9UnUCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trips by User Type' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
